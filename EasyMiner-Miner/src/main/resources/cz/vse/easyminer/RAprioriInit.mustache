{{!
@param String         jdbcDriverAbsolutePath
@param String         dbServer
@param String         dbName
@param String         dbUser
@param String         dbPassword
@param String         dbTableName
@param String         whereQuery
}}
#library(RJDBC)
#library(arules)
#library(rCBA)
#library(R.utils)

prepareData <- function() {
    # load data from mysql
    drv <- JDBC("com.mysql.jdbc.Driver", list.files("{{jdbcDriverAbsolutePath}}", pattern="jar$",full.names=T))
    con <- dbConnect(drv, "jdbc:mysql://{{{dbServer}}}:3306/{{{dbName}}}?characterEncoding=utf8", "{{{dbUser}}}", "{{{dbPassword}}}")
    train <- dbGetQuery(con, "SELECT id, CONCAT(attribute, '=', value) AS item FROM `{{{dbTableName}}}` WHERE {{{whereQuery}}}")
    dbDisconnect(con)
    # normalize data
    train <- aggregate(item~id, data=train, simplify = FALSE, FUN = function(t) t)
    txns <- as(train[[2]], "transactions")
    return(txns)
}

maximalTransaction <- function(txns) {
    txnsList <- as(txns, "list")
    maxLength <- 0
    for(i in 1:length(txnsList)) {
        currentLength <- length(txnsList[[i]])
        if (currentLength > maxLength) {
            maxLength <- currentLength
        }
    }
    return(maxLength)
}

txns <- prepareData()
maxtxns <- maximalTransaction(txns)

options(width=10000)
options(max.print=1000000)