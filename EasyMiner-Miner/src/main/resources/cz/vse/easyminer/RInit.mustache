processWithTimeout <- function(fun, timeout=30) {
    setTimeLimit(timeout+5);
    myfork <- parallel::mcparallel({
        fun()
    }, silent=FALSE);
    Sys.sleep(0.1);
    myresult <- parallel::mccollect(myfork, wait=FALSE, timeout=timeout);
    tools::pskill(myfork$pid, tools::SIGKILL);
    tools::pskill(-1 * myfork$pid, tools::SIGKILL);
    parallel::mccollect(myfork, wait=FALSE);
    setTimeLimit();
    if(is.null(myresult)){
        stop("timeout", call.=FALSE);
    }
    myresult <- myresult[[1]];
    if(inherits(myresult,"try-error")){
        stop(attr(myresult, "condition"));
    }
    return(myresult);
}